module.exports = function (o) { void 0 === o && (o = {}); var r = o.level; void 0 === r && (r = 'info'); var t = o.name, c = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]', e = {trace: {priority: 10, symbol: '🔍', color: c ? '[34m%s[0m' : 'color: #6699cc;'}, debug: {priority: 20, symbol: '🐛', color: c ? '[36m%s[0m' : 'color: #66cccc;'}, info: {priority: 30, symbol: '✨', color: c ? '[32m%s[0m' : 'color: #99cc99;'}, warn: {priority: 40, symbol: '⚠️', color: c ? '[33m%s[0m' : 'color: #ffcc66;'}, error: {priority: 50, symbol: '🚨', color: c ? '[31m%s[0m' : 'color: #f2777a;'}, fatal: {priority: 60, symbol: '💀', color: c ? '[31m%s[0m' : 'color: #f2777a;'}}; if (!e[r]) throw Error('Invalid log level set'); function i () { var o = new Date(), r = function (o) { return o.length === 2 ? o : '0' + o }; return r(o.getHours().toString()) + ':' + r(o.getMinutes().toString()) + ':' + r(o.getSeconds().toString()) } var n = {}, l = function (o) { var r = e[o], n = r.symbol, l = r.color, s = t ? t + ':' : ''; return function (r, t) { if (void 0 === t && (t = ''), c) { var e = n + ' ' + i() + ' ' + s + l + ' - ' + l; return console.log(e, o, r, t), t || r } var m = i() + ' ' + s + '%c' + o + ' %c- %c' + r; return console.log(m, l, '', l, t), t || r } }; for (var s in e)n[s] = e[s].priority >= e[r].priority ? l(s) : function (o, r) { return r || o }; return n }
// # sourceMappingURL=runty-logger.m.js.map
